<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yeqifu.dao.IUserDao">

    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.yeqifu.domain.User">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userBirthday" column="birthday"></result>
        <result property="userSex" column="sex"></result>
        <result property="userAddress" column="address"></result>

    </resultMap>

    <!--了解的内容，抽取重复的sql语句-->
    <sql id="defaultUser">
        select * from user
    </sql>

    <!-- 查询所有用户 -->
    <!--<select id="findAll" resultType="user">-->
    <select id="findAll" resultMap="userMap">
        select * from user
    </select>

    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="int" resultType="com.yeqifu.domain.User">
        select * from user where id = #{uid}
    </select>

    <!-- 根据名称模糊查询-->
    <select id="findByName" parameterType="string" resultType="com.yeqifu.domain.User">
        select * from user where username like #{name}
    </select>

    <!-- 根据queryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.yeqifu.domain.QueryVo" resultType="com.yeqifu.domain.User">
        select * from user where username like #{user.userName}
    </select>

    <!--根据条件查询-->
    <!--<select id="findUserByCondition" resultMap="userMap" parameterType="user">-->
        <!--select * from user where 1=1-->
        <!--<if test="userName != null">-->
            <!--and username = #{userName}  &lt;!&ndash; sql语句中的username大小写无所谓，但是test="userName != null" , username = #{userName}中的userName必须和实体类中的userName相对应&ndash;&gt;-->
        <!--</if>-->
        <!--<if test="userSex != null">-->
            <!--and sex = #{userSex}-->
        <!--</if>-->
    <!--</select>-->

    <select id="findUserByCondition" resultMap="userMap" parameterType="user">
        select * from user
        <where>
            <if test="userName != null">
                and username = #{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>

    <!--根据QuseryVo中Id集合实现查询用户列表-->
    <select id="findUserInIds" resultMap="userMap" parameterType="queryvo">
        <include refid="defaultUser"></include>
        <where>
            <if test="ids !=null and ids.size()>0">
                <foreach collection="ids" open="and id in (" close=")" item="id" separator=",">
                    #{id}
                </foreach>
            </if>
        </where>
    </select>

</mapper>