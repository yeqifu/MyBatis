<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yeqifu.dao.IUserDao">

    <!-- 配置 查询结果的列名和实体类的属性名的对应关系 -->
    <resultMap id="userMap" type="com.yeqifu.domain.User">
        <!--主键字段的对应-->
        <id property="userId" column="id"></id>
        <!--非主键字段的对应-->
        <result property="userName" column="username"></result>
        <result property="userBirthday" column="birthday"></result>
        <result property="userSex" column="sex"></result>
        <result property="userAddress" column="address"></result>

    </resultMap>
    <!-- 查询所有用户 -->
    <!--<select id="findAll" resultType="user">-->
    <select id="findAll" resultMap="userMap">
        <!--select id as userId,username as userName,birthday as userBirthday,sex as userSex,address as userAddress from user-->
        select * from user;
    </select>

    <!-- 保存用户-->
    <insert id="saveUser" parameterType="com.yeqifu.domain.User">
        <!-- 配置插入操作后，获取插入数据的id -->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user (username,address,sex,birthday) values (#{username},#{address},#{sex},#{birthday})
    </insert>

    <!-- 更新用户-->
    <update id="updateUser" parameterType="com.yeqifu.domain.User">
        update user set username=#{username},address=#{address},sex=#{sex},birthday=#{birthday} where id=#{id}
    </update>

    <!-- 删除用户-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{uid}
    </delete>

    <!-- 根据id查询用户 -->
    <select id="findById" parameterType="int" resultType="com.yeqifu.domain.User">
        select * from user where id = #{uid}
    </select>

    <!-- 根据名称模糊查询-->
    <select id="findByName" parameterType="string" resultType="com.yeqifu.domain.User">
        select * from user where username like #{name}
    </select>

    <!-- 获取用户的总记录数  -->
    <select id="findTotal" resultType="int">
        select count(id) from user
    </select>

    <!-- 根据queryVo的条件查询用户 -->
    <select id="findUserByVo" parameterType="com.yeqifu.domain.QueryVo" resultType="com.yeqifu.domain.User">
        select * from user where username like #{user.username}
    </select>

</mapper>